using Utils;

namespace XYSJ_Test
{
    internal class Program
    {
        static void Main(string[] args)
        {

            Console.WriteLine("脚本分析&数据解析");



            #region 数据解析——数组转对象


            //String orgJson = "{ \"dev\": { \"6327c0c4\": { \"41\": \"41-1\", \"42\": \"42-2\", \"43\": \"43-3\" },\"6327c0c3\": { \"31\": \"31-1\", \"32\": \"32-1\" } }, \"time\": 1663550920 }"; // JSON字符串
            //String aimJson = "{\"Tid\":1709715147,\"Values\":[{\"StationNo\":\"dev\",\"Values\":[{\"Value\":{\"quality\":\"GOOD\",\"timeStamp\":\"2024-03-06T08:52:25.792752300Z\",\"value\":9220},\"address\":\"2\",\"coefficient\":0.0,\"contextCode\":\"\",\"dataFormat\":\"\",\"dataLayout\":\"\",\"dataType\":\"\",\"driverName\":\"\",\"id\":\"\",\"key\":\"\",\"maxValue\":\"9999\",\"minValue\":\"0\",\"offset\":0.0,\"sort\":0,\"stationNo\":\"dev\",\"switchKey\":\"\",\"tagCode\":\"IOTMqttDriver_AI00001\",\"tagName\":\"\",\"tagState\":\"\",\"troubleType\":\"\",\"unit\":\"\"}]}]}"; // JSON字符串


            ///// 1：源Key->目标Key
            ///// 2：源Key->目标Value
            ///// 3：源Value->目标Key
            ///// 4：源Value->目标Value
            //List<JsonMapping> jsonMappings = new List<JsonMapping>();
            //jsonMappings.Add(new JsonMapping("root.Tid", "root.time", 4));
            //jsonMappings.Add(new JsonMapping("root.Values", "root.dev", 4));
            //jsonMappings.Add(new JsonMapping("root.Values[*].StationNo", "root.dev.*", 2));
            //jsonMappings.Add(new JsonMapping("root.Values[*].Values", "root.dev.*", 4));
            //jsonMappings.Add(new JsonMapping("root.Values[*].Values[*].address", "root.dev.*.*", 2));
            //jsonMappings.Add(new JsonMapping("root.Values[*].Values[*].Value.value", "root.dev.*.*", 4));



            String orgJson = "{\"Tid\":1663550920,\"Values\":[{\"StationNo\":\"6327c0c4\",\"Values\":[{\"Value\":{\"quality\":\"GOOD\",\"timeStamp\":\"2024-03-06T08:52:25.792752300Z\",\"value\":\"41-1\"},\"address\":\"41\",\"coefficient\":0,\"contextCode\":\"\",\"dataFormat\":\"\",\"dataLayout\":\"\",\"dataType\":\"\",\"driverName\":\"\",\"id\":\"\",\"key\":\"\",\"maxValue\":\"9999\",\"minValue\":\"0\",\"offset\":0,\"sort\":0,\"stationNo\":\"dev\",\"switchKey\":\"\",\"tagCode\":\"IOTMqttDriver_AI00001\",\"tagName\":\"\",\"tagState\":\"\",\"troubleType\":\"\",\"unit\":\"\"},{\"Value\":{\"quality\":\"GOOD\",\"timeStamp\":\"2024-03-06T08:52:25.792752300Z\",\"value\":\"42-2\"},\"address\":\"42\",\"coefficient\":0,\"contextCode\":\"\",\"dataFormat\":\"\",\"dataLayout\":\"\",\"dataType\":\"\",\"driverName\":\"\",\"id\":\"\",\"key\":\"\",\"maxValue\":\"9999\",\"minValue\":\"0\",\"offset\":0,\"sort\":0,\"stationNo\":\"dev\",\"switchKey\":\"\",\"tagCode\":\"IOTMqttDriver_AI00001\",\"tagName\":\"\",\"tagState\":\"\",\"troubleType\":\"\",\"unit\":\"\"},{\"Value\":{\"quality\":\"GOOD\",\"timeStamp\":\"2024-03-06T08:52:25.792752300Z\",\"value\":\"43-3\"},\"address\":\"43\",\"coefficient\":0,\"contextCode\":\"\",\"dataFormat\":\"\",\"dataLayout\":\"\",\"dataType\":\"\",\"driverName\":\"\",\"id\":\"\",\"key\":\"\",\"maxValue\":\"9999\",\"minValue\":\"0\",\"offset\":0,\"sort\":0,\"stationNo\":\"dev\",\"switchKey\":\"\",\"tagCode\":\"IOTMqttDriver_AI00001\",\"tagName\":\"\",\"tagState\":\"\",\"troubleType\":\"\",\"unit\":\"\"}]},{\"StationNo\":\"6327c0c3\",\"Values\":[{\"Value\":{\"quality\":\"GOOD\",\"timeStamp\":\"2024-03-06T08:52:25.792752300Z\",\"value\":\"31-1\"},\"address\":\"31\",\"coefficient\":0,\"contextCode\":\"\",\"dataFormat\":\"\",\"dataLayout\":\"\",\"dataType\":\"\",\"driverName\":\"\",\"id\":\"\",\"key\":\"\",\"maxValue\":\"9999\",\"minValue\":\"0\",\"offset\":0,\"sort\":0,\"stationNo\":\"dev\",\"switchKey\":\"\",\"tagCode\":\"IOTMqttDriver_AI00001\",\"tagName\":\"\",\"tagState\":\"\",\"troubleType\":\"\",\"unit\":\"\"},{\"Value\":{\"quality\":\"GOOD\",\"timeStamp\":\"2024-03-06T08:52:25.792752300Z\",\"value\":\"32-1\"},\"address\":\"32\",\"coefficient\":0,\"contextCode\":\"\",\"dataFormat\":\"\",\"dataLayout\":\"\",\"dataType\":\"\",\"driverName\":\"\",\"id\":\"\",\"key\":\"\",\"maxValue\":\"9999\",\"minValue\":\"0\",\"offset\":0,\"sort\":0,\"stationNo\":\"dev\",\"switchKey\":\"\",\"tagCode\":\"IOTMqttDriver_AI00001\",\"tagName\":\"\",\"tagState\":\"\",\"troubleType\":\"\",\"unit\":\"\"}]}]}"; // JSON字符串
            String aimJson = "{\"dev\":{\"a\":{\"1\":\"111\"}},\"time\":166355111}"; // JSON字符串


            List<JsonMapping> jsonMappings = new List<JsonMapping>();
            jsonMappings.Add(new JsonMapping("root.time", "root.Tid", 4));
            //jsonMappings.Add(new JsonMapping("root.dev", "root.Values", 4));
            jsonMappings.Add(new JsonMapping("root.dev.a", "root.Values[*].StationNo", 3));
            //jsonMappings.Add(new JsonMapping("root.dev.a", "root.Values[*].Values", 4));
            jsonMappings.Add(new JsonMapping("root.dev.a.1", "root.Values[*].Values[*].address", 3));
            jsonMappings.Add(new JsonMapping("root.dev.a.1", "root.Values[*].Values[*].Value.value", 4));




            JsonTranferUtil jsonTranferUtil = new JsonTranferUtil(orgJson, aimJson, jsonMappings);
            var checkResult = jsonTranferUtil.GetSimpleOrgJson();

            Console.WriteLine("******************结果 **********************");

            Console.WriteLine("The Result:" + checkResult);
            //Console.WriteLine("The Result:" + checkResult?.IsSuccess + "   " + checkResult?.Msg);

            #endregion




            Console.ReadLine();

        }

    }
}